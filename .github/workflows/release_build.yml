name: ImageConvert

on: push

jobs:
  build:
    name: ImageConvert build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          cache: true
          go-version: "1.22"

      - name: install deps
        uses: ConorMacBride/install-package@v1
        with:
          brew: jpegoptim imagemagick
          apt: jpegoptim imagemagick
          choco: jpegoptim ImageMagick

      - name: Build
        run: |
          go clean -r ./...
          go mod tidy
          go build -v -ldflags="-s -w" ./...

      - name: Test
        if: runner.os != 'Windows'
        run: go test -v -race -count 1 -parallel 5 -covermode=atomic -coverprofile="coverage.out" ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          verbose: true # optional (default = false)

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m

      - name: Govulncheck
        uses: kmulvey/govulncheck-action@v1.2.0

  release:
    name: ImageConvert release
    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # See: https://goreleaser.com/ci/actions/

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          check-latest: true
          cache: true
          go-version: "1.22"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --config .goreleaser.yaml --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GO_RELEASER_GITHUB_TOKEN }}
